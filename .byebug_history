c
@eligibilty
c
@qualifications
c
flag
c
{@task.email1=>1,@task.email2=>2,@task.email3=>3,@task.email4=>4,@task.email5=>5}.reject { |k,v|  k.nil? } .keys.uniq.count
{@task.email1=>1,@task.email2=>2,@task.email3=>3,@task.email4=>4,@task.email5=>5}.reject { |k,v|  k.nil? } 
{@task.email1=>1,@task.email2=>2,@task.email3=>3,@task.email4=>4,@task.email5=>5}.reject { |k,v| k.empty?|| k.nil? } 
flag
c
{@task.email1=>1,@task.email2=>2,@task.email3=>3,@task.email4=>4,@task.email5=>5}.keys.uniq.count
@task.email3
@task.email2
@task.email1
count
duplicacy
flag
falg
c
nc
n
email5
email4
email3
email2
c
n
email5
email4
email3
email2
c
n
email5
email4
email3
email2
c
s.email2
n
c
n
s
c
s.email2
n
c
s.email2
n
s.email2
n
c
s.email2
n
s.email2
n
s.email1
n
c
n
temp_op_ctr
s.email1
s
temp_op_ctr
c
s.email2
c
project.admin_id
project
 n
c
ongoing_projects.first.ProjectName
ongoing_projects.first
ongoing_projects
c
ongoing_projects.first
ongoing_projects.first.Relation.ProjectName
ongoing_projects.first.ProjectName
ongoing_projects.first
ongoing_projects.first.ProjectName
ongoing_projects.ProjectName
ongoing_projects
c
ongoing_projects.first.ProjectName
ongoing_projects.first
ongoing_projects.ProjectName
ongoing_projects
students
@@allIds
c
projects
@@allIds
ids
c
projects
@@allIds
ids
completed_projects
ongoing_projects
n
students
c
@@allIds
ids
c
@@allIds
ids
c
SelectedProject.select("email1,email2,email3,email4,email5").where(id: @@allIds).third
SelectedProject.select("email1,email2,email3,email4,email5").where(id: @@allIds).second
SelectedProject.select("email1,email2,email3,email4,email5").where(id: @@allIds).first
SelectedProject.select("email1,email2,email3,email4,email5").where(id: @@allIds).size
SelectedProject.select("email1,email2,email3,email4,email5").where(id: @@allIds).count
@@allIds
SelectedProject.select("email1,email2,email3,email4,email5").where(id: @@allIds)
all
@@allids
SelectedProject.select("email1,email2,email3,email4,email5").where(id: @@allIds)
c
params[:email]
c
SelectedProject.select("ProjectName").where(id: ids)
SelectedProject.select("accepted").where(id: ids)
SelectedProject.select("ProjectName,accepted").where(id: ids)
SelectedProject.select("ProjectName,accepted").where(id: ids).first
SelectedProject.select("ProjectName,accepted").where(id: ids)
SelectedProject.select("ProjectName").where(id: ids)
c
@faculties
c
params[:email]
c
params
c
@email
n
@email
c
params
c
@email
n
@email
c
@email
c
params[:email]
c
@email
c
params
c
@email
n
params
c
params
c
@eligibility
c
@eligible_branches
c
@@allIds
c
@@allIds
students
c
students
n
students
c
n
students
@@allIds
c
@@allIds
c
n
students
n
students
n
c
continue
cc
c
@@allIds
c
@@allIds
ids
c
ids
@@allIds
c
n
ids
continue
c
projects
n
ids
n
c
n
relations
faculty_id
c
cc
c
cc
c
projects
n
c
projects
n
ids
n
faculty_id
c
@ongoing_projects
n
c
@faculties
n
c
@name
c
@task.members_count
n
c
@task.members_count
n
@email
n
@task.members_count
task.members_count
params
c
n
params
c
current_user.profile_pic
c
<<<<<<< HEAD
=======
params[:task][:members_count]
params[:task]
params
c
>>>>>>> f1b47212c65f2467f37c5d1155bab7bb3e9e018b
@projects
c
n
